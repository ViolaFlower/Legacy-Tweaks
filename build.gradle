

project.ext["loom.platform"] = project.name.contains("neoforge") ? "neoforge" : "fabric"
boolean neoforge = project.name.contains("neoforge")
boolean fabric = project.name.contains("fabric")

group = rootProject.maven_group
version = rootProject.mod_version


apply plugin: 'dev.architectury.loom'

base {
    // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
    archivesName = "$rootProject.archives_name-$project.name"
}


repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}


dependencies {
    minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
    if (neoforge) {
        neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"
    } else if (fabric) {
        modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

        // Fabric API. This is technically optional, but you probably want it anyway.
        modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"
    }
    mappings loom.officialMojangMappings()
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

//// Configure Maven publishing.
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifactId = base.archivesName.get()
//            from components.java
//        }
//    }
//
//    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
//    repositories {
//        // Add repositories to publish to here.
//        // Notice: This block does NOT have the same function as the block in the top level.
//        // The repositories here will be used for publishing your artifact, not for
//        // retrieving dependencies.
//    }
//}